import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

class Book {
    private int id;
    private String title;
    private String author;
    private boolean isBorrowed;

    public Book(int id, String title, String author) {
        this.id = id;
        this.title = title;
        this.author = author;
        this.isBorrowed = false;
    }

    public int getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public boolean isBorrowed() {
        return isBorrowed;
    }

    public void borrowBook() {
        isBorrowed = true;
    }

    public void returnBook() {
        isBorrowed = false;
    }

    @Override
    public String toString() {
        return "ID: " + id + ", Title: " + title + ", Author: " + author + ", Borrowed: " + isBorrowed;
    }
}

class Library {
    private ArrayList<Book> books;
    private HashMap<Integer, ArrayList<Book>> borrowedBooks;

    public Library() {
        books = new ArrayList<>();
        borrowedBooks = new HashMap<>();
    }

    public void addBook(Book book) {
        books.add(book);
        System.out.println("Book added successfully.");
    }

    public void removeBook(int id) {
        books.removeIf(book -> book.getId() == id);
        System.out.println("Book removed successfully.");
    }

    public void displayBooks() {
        if (books.isEmpty()) {
            System.out.println("No books available.");
        } else {
            for (Book book : books) {
                System.out.println(book);
            }
        }
    }

    public void borrowBook(int userId, int bookId) {
        for (Book book : books) {
            if (book.getId() == bookId && !book.isBorrowed()) {
                book.borrowBook();
                borrowedBooks.putIfAbsent(userId, new ArrayList<>());
                borrowedBooks.get(userId).add(book);
                System.out.println("Book borrowed successfully.");
                return;
            }
        }
        System.out.println("Book not available for borrowing.");
    }

    public void returnBook(int userId, int bookId) {
        if (borrowedBooks.containsKey(userId)) {
            ArrayList<Book> userBooks = borrowedBooks.get(userId);
            for (Book book : userBooks) {
                if (book.getId() == bookId) {
                    book.returnBook();
                    userBooks.remove(book);
                    System.out.println("Book returned successfully.");
                    return;
                }
            }
        }
        System.out.println("Book not found in borrowed list.");
    }

    public void displayBorrowedBooks(int userId) {
        if (borrowedBooks.containsKey(userId) && !borrowedBooks.get(userId).isEmpty()) {
            for (Book book : borrowedBooks.get(userId)) {
                System.out.println(book);
            }
        } else {
            System.out.println("No books borrowed.");
        }
    }
}
